-- ========================================================
-- CREACIÓN DE TABLAS
-- ========================================================


CREATE TABLE Usuarios (
    idUsuario NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    nombre    VARCHAR2(100) NOT NULL,
    carrera   VARCHAR2(80),
    correo    VARCHAR2(120) UNIQUE NOT NULL
);


CREATE TABLE Salas (
    idSala NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    nombreSala VARCHAR2(80) NOT NULL,
    capacidad  NUMBER NOT NULL,
    estado     VARCHAR2(20) DEFAULT 'DISPONIBLE'
        CHECK (estado IN ('DISPONIBLE','OCUPADA'))
);


CREATE TABLE Reservas (
    idReserva NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    idUsuario NUMBER NOT NULL REFERENCES Usuarios(idUsuario),
    idSala    NUMBER NOT NULL REFERENCES Salas(idSala),
    fechaReserva DATE NOT NULL,
    horaInicio  VARCHAR2(5) NOT NULL,
    horaFin     VARCHAR2(5) NOT NULL
);


-- INSERTS MÍNIMOS


-- Usuarios
INSERT INTO Usuarios(nombre, carrera, correo) 
VALUES ('Ana Torres','Informática','ana.torres@una.cr');

INSERT INTO Usuarios(nombre, carrera, correo) 
VALUES ('Luis Mora','Matemática','luis.mora@una.cr');

INSERT INTO Usuarios(nombre, carrera, correo) 
VALUES ('Dr. Douglas Navarro','Matemática','douglas.navarro@1.cr');

INSERT INTO Usuarios(nombre, carrera, correo) 
VALUES ('Juan Gamboa','Informática','juan.gamboa@1.cr');

-- Salas
INSERT INTO Salas(nombreSala, capacidad, estado) 
VALUES ('Sala A', 6, 'DISPONIBLE');

INSERT INTO Salas(nombreSala, capacidad, estado) 
VALUES ('Sala B', 10, 'DISPONIBLE');

-- ========================================================
-- CONSULTAS DE PRUEBA
-- ========================================================

-- 1) Listar reservas con nombre de usuario y sala
SELECT r.idReserva, u.nombre, s.nombreSala, r.fechaReserva, r.horaInicio, r.horaFin
FROM Reservas r
JOIN Usuarios u ON u.idUsuario = r.idUsuario
JOIN Salas s ON s.idSala = r.idSala;

-- 2) Reservas por fecha
SELECT * FROM Reservas WHERE fechaReserva = DATE '2025-10-10';

-- 3) Salas disponibles
SELECT * FROM Salas WHERE estado = 'DISPONIBLE';

-- 4) Reservas por usuario
SELECT * FROM Reservas WHERE idUsuario = 1;

-- 5) Conteo de reservas por sala
SELECT s.nombreSala, COUNT(*) AS total
FROM Reservas r 
JOIN Salas s ON s.idSala = r.idSala 
GROUP BY s.nombreSala;
